Specializing class UhOh1...

  // interface:
  abstract trait UhOh1[X, Y] extends Object {
    def foo(x: X,y: Y): X
    def foo_J(val X_TypeTag: Byte,x: Long,y: Y): Long
  }

  // specialized class:
  class UhOh1_J[Xsp, Ysp] extends UhOh1[Xsp,Ysp] {
    def <init>(val miniboxing$tests$compile$UhOh1_J|X_TypeTag: Byte): miniboxing.tests.compile.UhOh1_J[Xsp,Ysp] // is a specialized implementation of constructor UhOh1
    def foo(x: Xsp,y: Ysp): Xsp                                            // is a forwarder to method foo_J
    def foo_J(val X_TypeTag: Byte,x: Long,y: Ysp): Long                    // is a specialized implementation of method foo
    private[this] val miniboxing$tests$compile$UhOh1_J|X_TypeTag: Byte     // no info
  }

  // specialized class:
  class UhOh1_L[Xsp, Ysp] extends UhOh1[Xsp,Ysp] {
    def <init>(): miniboxing.tests.compile.UhOh1_L[Xsp,Ysp]                // is a specialized implementation of constructor UhOh1
    def foo(x: Xsp,y: Ysp): Xsp                                            // is a specialized implementation of method foo
    def foo_J(val X_TypeTag: Byte,x: Long,y: Ysp): Long                    // is a forwarder to method foo
  }




[[syntax trees at end of                   minibox]] // newSource1.scala
package miniboxing.tests.compile {
  abstract trait UhOh1[@miniboxed X >: Nothing <: Any, Y >: Nothing <: Any] extends Object {
    def foo(x: X, y: Y): X;
    def foo_J(X_TypeTag: Byte, x: Long, y: Y): Long
  };
  class UhOh1_J[Xsp >: Nothing <: Any, Ysp >: Nothing <: Any] extends Object with miniboxing.tests.compile.UhOh1[Xsp,Ysp] {
    def <init>(miniboxing$tests$compile$UhOh1_J|X_TypeTag: Byte): miniboxing.tests.compile.UhOh1_J[Xsp,Ysp] = {
      UhOh1_J.super.<init>();
      ()
    };
    def foo(x: Xsp, y: Ysp): Xsp = MiniboxConversions.this.minibox2box[Xsp](UhOh1_J.this.foo_J(UhOh1_J.this.miniboxing$tests$compile$UhOh1_J|X_TypeTag, MiniboxConversions.this.box2minibox_tt[Xsp](x, UhOh1_J.this.miniboxing$tests$compile$UhOh1_J|X_TypeTag), y), UhOh1_J.this.miniboxing$tests$compile$UhOh1_J|X_TypeTag);
    def foo_J(X_TypeTag: Byte, x: Long, y: Ysp): Long = UhOh1_J.this.foo_J(X_TypeTag, x, y);
    <paramaccessor> private[this] val miniboxing$tests$compile$UhOh1_J|X_TypeTag: Byte = _
  };
  class UhOh1_L[Xsp >: Nothing <: Any, Ysp >: Nothing <: Any] extends Object with miniboxing.tests.compile.UhOh1[Xsp,Ysp] {
    def <init>(): miniboxing.tests.compile.UhOh1_L[Xsp,Ysp] = {
      UhOh1_L.super.<init>();
      ()
    };
    def foo(x: Xsp, y: Ysp): Xsp = UhOh1_L.this.foo(x, y);
    def foo_J(X_TypeTag: Byte, x: Long, y: Ysp): Long = MiniboxConversions.this.box2minibox_tt[Xsp](UhOh1_L.this.foo(MiniboxConversions.this.minibox2box[Xsp](x, X_TypeTag), y), X_TypeTag)
  }
}

[Now checking: minibox]