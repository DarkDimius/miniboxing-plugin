Specializing trait Base1...

  // interface:
  abstract trait Base1[B11, B12] extends Object {
  }

  // specialized class:
  abstract trait Base1_JJ[B11sp, B12sp] extends Base1[B11sp,B12sp] {
    def miniboxing$tests$compile$inheritance$Base1_JJ|B11_TypeTag(): Byte  // is a type tag
    def miniboxing$tests$compile$inheritance$Base1_JJ|B12_TypeTag(): Byte  // is a type tag
  }

  // specialized class:
  abstract trait Base1_LJ[B11sp, B12sp] extends Base1[B11sp,B12sp] {
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte  // is a type tag
  }

  // specialized class:
  abstract trait Base1_JL[B11sp, B12sp] extends Base1[B11sp,B12sp] {
    def miniboxing$tests$compile$inheritance$Base1_JL|B11_TypeTag(): Byte  // is a type tag
  }

  // specialized class:
  abstract trait Base1_LL[B11sp, B12sp] extends Base1[B11sp,B12sp] {
  }




Specializing trait Base2...

  // interface:
  abstract trait Base2[B21, B22] extends Object {
  }

  // specialized class:
  abstract trait Base2_J[B21sp, B22sp] extends Base2[B21sp,B22sp] {
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte   // is a type tag
  }

  // specialized class:
  abstract trait Base2_L[B21sp, B22sp] extends Base2[B21sp,B22sp] {
  }




Specializing trait Base3...

  // interface:
  abstract trait Base3[B31, B32] extends Object {
  }

  // specialized class:
  abstract trait Base3_J[B31sp, B32sp] extends Base3[B31sp,B32sp] {
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte   // is a type tag
  }

  // specialized class:
  abstract trait Base3_L[B31sp, B32sp] extends Base3[B31sp,B32sp] {
  }




Specializing class Derived1...

  // interface:
  abstract trait Derived1[D11, D12] extends Base1[D11,D12] with Base2[D11,D12] with Base3[D11,D12] with Base4[D11,D12] {
  }

  // specialized class:
  class Derived1_JJ[D11sp, D12sp] extends Base1_JJ[D11sp,D12sp] with Base2_J[D11sp,D12sp] with Base3_J[D11sp,D12sp] with Base4[D11sp,D12sp] with Derived1[D11sp,D12sp] {
    def <init>(val miniboxing$tests$compile$inheritance$Derived1_JJ|D11_TypeTag: Byte,val miniboxing$tests$compile$inheritance$Derived1_JJ|D12_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived1_JJ[D11sp,D12sp] // is a specialized implementation of constructor Derived1
    def miniboxing$tests$compile$inheritance$Base1_JJ|B11_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base1_JJ|B12_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte   // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte   // is a type tag from an inherited trait
    private[this] val miniboxing$tests$compile$inheritance$Derived1_JJ|D11_TypeTag: Byte // no info
    private[this] val miniboxing$tests$compile$inheritance$Derived1_JJ|D12_TypeTag: Byte // no info
  }

  // specialized class:
  class Derived1_LJ[D11sp, D12sp] extends Base1_LJ[D11sp,D12sp] with Base2_J[D11sp,D12sp] with Base3_L[D11sp,D12sp] with Base4[D11sp,D12sp] with Derived1[D11sp,D12sp] {
    def <init>(val miniboxing$tests$compile$inheritance$Derived1_LJ|D12_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived1_LJ[D11sp,D12sp] // is a specialized implementation of constructor Derived1
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte   // is a type tag from an inherited trait
    private[this] val miniboxing$tests$compile$inheritance$Derived1_LJ|D12_TypeTag: Byte // no info
  }

  // specialized class:
  class Derived1_JL[D11sp, D12sp] extends Base1_JL[D11sp,D12sp] with Base2_L[D11sp,D12sp] with Base3_J[D11sp,D12sp] with Base4[D11sp,D12sp] with Derived1[D11sp,D12sp] {
    def <init>(val miniboxing$tests$compile$inheritance$Derived1_JL|D11_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived1_JL[D11sp,D12sp] // is a specialized implementation of constructor Derived1
    def miniboxing$tests$compile$inheritance$Base1_JL|B11_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte   // is a type tag from an inherited trait
    private[this] val miniboxing$tests$compile$inheritance$Derived1_JL|D11_TypeTag: Byte // no info
  }

  // specialized class:
  class Derived1_LL[D11sp, D12sp] extends Base1_LL[D11sp,D12sp] with Base2_L[D11sp,D12sp] with Base3_L[D11sp,D12sp] with Base4[D11sp,D12sp] with Derived1[D11sp,D12sp] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived1_LL[D11sp,D12sp] // is a specialized implementation of constructor Derived1
  }




Specializing class Derived2...

  // interface:
  abstract trait Derived2[D21, D22] extends Base1[D21,D22] with Base2[D21,D22] with Base3[D21,D22] with Base4[D21,D22] {
  }

  // specialized class:
  class Derived2_J[D21sp, D22sp] extends Base1_LJ[D21sp,D22sp] with Base2_J[D21sp,D22sp] with Base3_L[D21sp,D22sp] with Base4[D21sp,D22sp] with Derived2[D21sp,D22sp] {
    def <init>(val miniboxing$tests$compile$inheritance$Derived2_J|D22_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived2_J[D21sp,D22sp] // is a specialized implementation of constructor Derived2
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte   // is a type tag from an inherited trait
    private[this] val miniboxing$tests$compile$inheritance$Derived2_J|D22_TypeTag: Byte // no info
  }

  // specialized class:
  class Derived2_L[D21sp, D22sp] extends Base1_LL[D21sp,D22sp] with Base2_L[D21sp,D22sp] with Base3_L[D21sp,D22sp] with Base4[D21sp,D22sp] with Derived2[D21sp,D22sp] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived2_L[D21sp,D22sp] // is a specialized implementation of constructor Derived2
  }




Specializing class Derived3...

  // interface:
  abstract trait Derived3[D31, D32] extends Base1[D31,D32] with Base2[D31,D32] with Base3[D31,D32] with Base4[D31,D32] {
  }

  // specialized class:
  class Derived3_J[D31sp, D32sp] extends Base1_JL[D31sp,D32sp] with Base2_L[D31sp,D32sp] with Base3_J[D31sp,D32sp] with Base4[D31sp,D32sp] with Derived3[D31sp,D32sp] {
    def <init>(val miniboxing$tests$compile$inheritance$Derived3_J|D31_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived3_J[D31sp,D32sp] // is a specialized implementation of constructor Derived3
    def miniboxing$tests$compile$inheritance$Base1_JL|B11_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte   // is a type tag from an inherited trait
    private[this] val miniboxing$tests$compile$inheritance$Derived3_J|D31_TypeTag: Byte // no info
  }

  // specialized class:
  class Derived3_L[D31sp, D32sp] extends Base1_LL[D31sp,D32sp] with Base2_L[D31sp,D32sp] with Base3_L[D31sp,D32sp] with Base4[D31sp,D32sp] with Derived3[D31sp,D32sp] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived3_L[D31sp,D32sp] // is a specialized implementation of constructor Derived3
  }




Specializing class Derived6...

  // interface:
  abstract trait Derived6[D61] extends Base1[D61,Boolean] with Base2[D61,Boolean] with Base3[D61,Boolean] with Base4[D61,Boolean] {
  }

  // specialized class:
  class Derived6_J[D61sp] extends Base1_JJ[D61sp,Boolean] with Base2_J[D61sp,Boolean] with Base3_J[D61sp,Boolean] with Base4[D61sp,Boolean] with Derived6[D61sp] {
    def <init>(val miniboxing$tests$compile$inheritance$Derived6_J|D61_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived6_J[D61sp] // is a specialized implementation of constructor Derived6
    def miniboxing$tests$compile$inheritance$Base1_JJ|B11_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base1_JJ|B12_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte   // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte   // is a type tag from an inherited trait
    private[this] val miniboxing$tests$compile$inheritance$Derived6_J|D61_TypeTag: Byte // no info
  }

  // specialized class:
  class Derived6_L[D61sp] extends Base1_LJ[D61sp,Boolean] with Base2_J[D61sp,Boolean] with Base3_L[D61sp,Boolean] with Base4[D61sp,Boolean] with Derived6[D61sp] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived6_L[D61sp]   // is a specialized implementation of constructor Derived6
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte  // is a type tag from an inherited trait
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte   // is a type tag from an inherited trait
  }




[[syntax trees at end of                   minibox]] // newSource1.scala
package miniboxing.tests.compile.inheritance {
  abstract trait Base1[@miniboxed B11 >: Nothing <: Any, @miniboxed B12 >: Nothing <: Any] extends Object;
  abstract trait Base2[B21 >: Nothing <: Any, @miniboxed B22 >: Nothing <: Any] extends Object;
  abstract trait Base3[@miniboxed B31 >: Nothing <: Any, B32 >: Nothing <: Any] extends Object;
  abstract trait Base4[B41 >: Nothing <: Any, B42 >: Nothing <: Any] extends Object;
  abstract trait Derived1[@miniboxed D11 >: Nothing <: Any, @miniboxed D12 >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1[D11,D12] with miniboxing.tests.compile.inheritance.Base2[D11,D12] with miniboxing.tests.compile.inheritance.Base3[D11,D12] with miniboxing.tests.compile.inheritance.Base4[D11,D12];
  abstract trait Derived2[D21 >: Nothing <: Any, @miniboxed D22 >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1[D21,D22] with miniboxing.tests.compile.inheritance.Base2[D21,D22] with miniboxing.tests.compile.inheritance.Base3[D21,D22] with miniboxing.tests.compile.inheritance.Base4[D21,D22];
  abstract trait Derived3[@miniboxed D31 >: Nothing <: Any, D32 >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1[D31,D32] with miniboxing.tests.compile.inheritance.Base2[D31,D32] with miniboxing.tests.compile.inheritance.Base3[D31,D32] with miniboxing.tests.compile.inheritance.Base4[D31,D32];
  class Derived4[D41 >: Nothing <: Any, D42 >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_LL[D41,D42] with miniboxing.tests.compile.inheritance.Base2_L[D41,D42] with miniboxing.tests.compile.inheritance.Base3_L[D41,D42] with miniboxing.tests.compile.inheritance.Base4[D41,D42] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived4[D41,D42] = {
      Derived4.super.<init>();
      ()
    }
  };
  class Derived5[D51 >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_LJ[D51,Boolean] with miniboxing.tests.compile.inheritance.Base2_J[D51,Boolean] with miniboxing.tests.compile.inheritance.Base3_L[D51,Boolean] with miniboxing.tests.compile.inheritance.Base4[D51,Boolean] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived5[D51] = {
      Derived5.super.<init>();
      ()
    };
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte = 1;
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte = 1
  };
  abstract trait Derived6[@miniboxed D61 >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1[D61,Boolean] with miniboxing.tests.compile.inheritance.Base2[D61,Boolean] with miniboxing.tests.compile.inheritance.Base3[D61,Boolean] with miniboxing.tests.compile.inheritance.Base4[D61,Boolean];
  abstract trait Base1_JJ[B11sp >: Nothing <: Any, B12sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1[B11sp,B12sp] {
    def miniboxing$tests$compile$inheritance$Base1_JJ|B11_TypeTag(): Byte;
    def miniboxing$tests$compile$inheritance$Base1_JJ|B12_TypeTag(): Byte
  };
  abstract trait Base1_JL[B11sp >: Nothing <: Any, B12sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1[B11sp,B12sp] {
    def miniboxing$tests$compile$inheritance$Base1_JL|B11_TypeTag(): Byte
  };
  abstract trait Base1_LJ[B11sp >: Nothing <: Any, B12sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1[B11sp,B12sp] {
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte
  };
  abstract trait Base1_LL[B11sp >: Nothing <: Any, B12sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1[B11sp,B12sp];
  abstract trait Base2_J[B21sp >: Nothing <: Any, B22sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base2[B21sp,B22sp] {
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte
  };
  abstract trait Base2_L[B21sp >: Nothing <: Any, B22sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base2[B21sp,B22sp];
  abstract trait Base3_J[B31sp >: Nothing <: Any, B32sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base3[B31sp,B32sp] {
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte
  };
  abstract trait Base3_L[B31sp >: Nothing <: Any, B32sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base3[B31sp,B32sp];
  class Derived1_JJ[D11sp >: Nothing <: Any, D12sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_JJ[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base2_J[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base3_J[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base4[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Derived1[D11sp,D12sp] {
    def <init>(miniboxing$tests$compile$inheritance$Derived1_JJ|D11_TypeTag: Byte, miniboxing$tests$compile$inheritance$Derived1_JJ|D12_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived1_JJ[D11sp,D12sp] = {
      Derived1_JJ.super.<init>();
      ()
    };
    def miniboxing$tests$compile$inheritance$Base1_JJ|B11_TypeTag(): Byte = Derived1_JJ.this.miniboxing$tests$compile$inheritance$Derived1_JJ|D11_TypeTag;
    def miniboxing$tests$compile$inheritance$Base1_JJ|B12_TypeTag(): Byte = Derived1_JJ.this.miniboxing$tests$compile$inheritance$Derived1_JJ|D12_TypeTag;
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte = Derived1_JJ.this.miniboxing$tests$compile$inheritance$Derived1_JJ|D12_TypeTag;
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte = Derived1_JJ.this.miniboxing$tests$compile$inheritance$Derived1_JJ|D11_TypeTag;
    <paramaccessor> private[this] val miniboxing$tests$compile$inheritance$Derived1_JJ|D11_TypeTag: Byte = _;
    <paramaccessor> private[this] val miniboxing$tests$compile$inheritance$Derived1_JJ|D12_TypeTag: Byte = _
  };
  class Derived1_JL[D11sp >: Nothing <: Any, D12sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_JL[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base2_L[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base3_J[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base4[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Derived1[D11sp,D12sp] {
    def <init>(miniboxing$tests$compile$inheritance$Derived1_JL|D11_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived1_JL[D11sp,D12sp] = {
      Derived1_JL.super.<init>();
      ()
    };
    def miniboxing$tests$compile$inheritance$Base1_JL|B11_TypeTag(): Byte = Derived1_JL.this.miniboxing$tests$compile$inheritance$Derived1_JL|D11_TypeTag;
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte = Derived1_JL.this.miniboxing$tests$compile$inheritance$Derived1_JL|D11_TypeTag;
    <paramaccessor> private[this] val miniboxing$tests$compile$inheritance$Derived1_JL|D11_TypeTag: Byte = _
  };
  class Derived1_LJ[D11sp >: Nothing <: Any, D12sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_LJ[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base2_J[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base3_L[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base4[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Derived1[D11sp,D12sp] {
    def <init>(miniboxing$tests$compile$inheritance$Derived1_LJ|D12_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived1_LJ[D11sp,D12sp] = {
      Derived1_LJ.super.<init>();
      ()
    };
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte = Derived1_LJ.this.miniboxing$tests$compile$inheritance$Derived1_LJ|D12_TypeTag;
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte = Derived1_LJ.this.miniboxing$tests$compile$inheritance$Derived1_LJ|D12_TypeTag;
    <paramaccessor> private[this] val miniboxing$tests$compile$inheritance$Derived1_LJ|D12_TypeTag: Byte = _
  };
  class Derived1_LL[D11sp >: Nothing <: Any, D12sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_LL[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base2_L[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base3_L[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Base4[D11sp,D12sp] with miniboxing.tests.compile.inheritance.Derived1[D11sp,D12sp] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived1_LL[D11sp,D12sp] = {
      Derived1_LL.super.<init>();
      ()
    }
  };
  class Derived2_J[D21sp >: Nothing <: Any, D22sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_LJ[D21sp,D22sp] with miniboxing.tests.compile.inheritance.Base2_J[D21sp,D22sp] with miniboxing.tests.compile.inheritance.Base3_L[D21sp,D22sp] with miniboxing.tests.compile.inheritance.Base4[D21sp,D22sp] with miniboxing.tests.compile.inheritance.Derived2[D21sp,D22sp] {
    def <init>(miniboxing$tests$compile$inheritance$Derived2_J|D22_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived2_J[D21sp,D22sp] = {
      Derived2_J.super.<init>();
      ()
    };
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte = Derived2_J.this.miniboxing$tests$compile$inheritance$Derived2_J|D22_TypeTag;
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte = Derived2_J.this.miniboxing$tests$compile$inheritance$Derived2_J|D22_TypeTag;
    <paramaccessor> private[this] val miniboxing$tests$compile$inheritance$Derived2_J|D22_TypeTag: Byte = _
  };
  class Derived2_L[D21sp >: Nothing <: Any, D22sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_LL[D21sp,D22sp] with miniboxing.tests.compile.inheritance.Base2_L[D21sp,D22sp] with miniboxing.tests.compile.inheritance.Base3_L[D21sp,D22sp] with miniboxing.tests.compile.inheritance.Base4[D21sp,D22sp] with miniboxing.tests.compile.inheritance.Derived2[D21sp,D22sp] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived2_L[D21sp,D22sp] = {
      Derived2_L.super.<init>();
      ()
    }
  };
  class Derived3_J[D31sp >: Nothing <: Any, D32sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_JL[D31sp,D32sp] with miniboxing.tests.compile.inheritance.Base2_L[D31sp,D32sp] with miniboxing.tests.compile.inheritance.Base3_J[D31sp,D32sp] with miniboxing.tests.compile.inheritance.Base4[D31sp,D32sp] with miniboxing.tests.compile.inheritance.Derived3[D31sp,D32sp] {
    def <init>(miniboxing$tests$compile$inheritance$Derived3_J|D31_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived3_J[D31sp,D32sp] = {
      Derived3_J.super.<init>();
      ()
    };
    def miniboxing$tests$compile$inheritance$Base1_JL|B11_TypeTag(): Byte = Derived3_J.this.miniboxing$tests$compile$inheritance$Derived3_J|D31_TypeTag;
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte = Derived3_J.this.miniboxing$tests$compile$inheritance$Derived3_J|D31_TypeTag;
    <paramaccessor> private[this] val miniboxing$tests$compile$inheritance$Derived3_J|D31_TypeTag: Byte = _
  };
  class Derived3_L[D31sp >: Nothing <: Any, D32sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_LL[D31sp,D32sp] with miniboxing.tests.compile.inheritance.Base2_L[D31sp,D32sp] with miniboxing.tests.compile.inheritance.Base3_L[D31sp,D32sp] with miniboxing.tests.compile.inheritance.Base4[D31sp,D32sp] with miniboxing.tests.compile.inheritance.Derived3[D31sp,D32sp] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived3_L[D31sp,D32sp] = {
      Derived3_L.super.<init>();
      ()
    }
  };
  class Derived6_J[D61sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_JJ[D61sp,Boolean] with miniboxing.tests.compile.inheritance.Base2_J[D61sp,Boolean] with miniboxing.tests.compile.inheritance.Base3_J[D61sp,Boolean] with miniboxing.tests.compile.inheritance.Base4[D61sp,Boolean] with miniboxing.tests.compile.inheritance.Derived6[D61sp] {
    def <init>(miniboxing$tests$compile$inheritance$Derived6_J|D61_TypeTag: Byte): miniboxing.tests.compile.inheritance.Derived6_J[D61sp] = {
      Derived6_J.super.<init>();
      ()
    };
    def miniboxing$tests$compile$inheritance$Base1_JJ|B11_TypeTag(): Byte = Derived6_J.this.miniboxing$tests$compile$inheritance$Derived6_J|D61_TypeTag;
    def miniboxing$tests$compile$inheritance$Base1_JJ|B12_TypeTag(): Byte = 1;
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte = 1;
    def miniboxing$tests$compile$inheritance$Base3_J|B31_TypeTag(): Byte = Derived6_J.this.miniboxing$tests$compile$inheritance$Derived6_J|D61_TypeTag;
    <paramaccessor> private[this] val miniboxing$tests$compile$inheritance$Derived6_J|D61_TypeTag: Byte = _
  };
  class Derived6_L[D61sp >: Nothing <: Any] extends Object with miniboxing.tests.compile.inheritance.Base1_LJ[D61sp,Boolean] with miniboxing.tests.compile.inheritance.Base2_J[D61sp,Boolean] with miniboxing.tests.compile.inheritance.Base3_L[D61sp,Boolean] with miniboxing.tests.compile.inheritance.Base4[D61sp,Boolean] with miniboxing.tests.compile.inheritance.Derived6[D61sp] {
    def <init>(): miniboxing.tests.compile.inheritance.Derived6_L[D61sp] = {
      Derived6_L.super.<init>();
      ()
    };
    def miniboxing$tests$compile$inheritance$Base1_LJ|B12_TypeTag(): Byte = 1;
    def miniboxing$tests$compile$inheritance$Base2_J|B22_TypeTag(): Byte = 1
  }
}

[Now checking: minibox]